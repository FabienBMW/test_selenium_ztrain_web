<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="13" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="246128" started-at="2022-05-30T12:19:31 CEST" finished-at="2022-05-30T12:23:37 CEST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Surefire test" duration-ms="246128" started-at="2022-05-30T12:19:31 CEST" finished-at="2022-05-30T12:23:37 CEST">
      <class name="com.ztrain.web.TestRunner">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="setUpClass" is-config="true" duration-ms="602" started-at="2022-05-30T12:19:31 CEST" finished-at="2022-05-30T12:19:31 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2da0770]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="beforeTest" is-config="true" duration-ms="2792" started-at="2022-05-30T12:19:31 CEST" finished-at="2022-05-30T12:19:34 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="34703" started-at="2022-05-30T12:19:34 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:20:09 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add product to cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'then we observe a pop pop which indicates the following message Votre panier à été mis à jour' is undefined.
You can implement this step using the snippet(s) below:

@Then("then we observe a pop pop which indicates the following message Votre panier à été mis à jour")
public void then_we_observe_a_pop_pop_which_indicates_the_following_message_votre_panier_à_été_mis_à_jour() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'then we observe a pop pop which indicates the following message Votre panier à été mis à jour' is undefined.
You can implement this step using the snippet(s) below:

@Then("then we observe a pop pop which indicates the following message Votre panier à été mis à jour")
public void then_we_observe_a_pop_pop_which_indicates_the_following_message_votre_panier_à_été_mis_à_jour() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:151)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:192)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:93)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="25719" started-at="2022-05-30T12:20:09 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:20:35 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Produit en promotion"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[En tant que utilisateur connecté sur la page d’accueil,En ajoutant un produit en promotion au panier, je dois voir afficher un montant relatif à la promotion]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">...</svg> is not clickable at point (1349, 50). Other element would receive the click: <div id="style_container__P9Oh0">...</div>
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'DESKTOP-L0MBEAP', ip: '169.254.96.69', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\TED\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:46754}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3984732b6a7969f2fd92f70b40604bcf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <svg stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">...</svg> is not clickable at point (1349, 50). Other element would receive the click: <div id="style_container__P9Oh0">...</div>
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'DESKTOP-L0MBEAP', ip: '169.254.96.69', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\TED\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:46754}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3984732b6a7969f2fd92f70b40604bcf
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:316)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at com.sun.proxy.$Proxy41.click(Unknown Source)
at com.ztrain.web.pageObjects.Page.clickOn(Page.java:108)
at com.ztrain.web.pageObjects.HomePage.openCart(HomePage.java:142)
at com.ztrain.web.steps.OrderButtonSteps.heClicksOnCartIcon(OrderButtonSteps.java:18)
at ✽.he clicks on cart icon(file:///C:/Users/TED/Documents/pawk/formation/selenium%20ISTQB/framework/demo_test/src/test/resources/features/ajout_produit_promotion.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="896" started-at="2022-05-30T12:20:35 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:20:35 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Email format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[login]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="45197" started-at="2022-05-30T12:20:35 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:21:21 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add product to cart and empty the cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart so that I could empty the cart]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="26860" started-at="2022-05-30T12:21:21 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:21:48 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test fields required for payment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="2433" started-at="2022-05-30T12:21:48 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:21:50 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Perform login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a Z-Train client I want to login so that I could access to online store]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="511" started-at="2022-05-30T12:21:50 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:21:50 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Error messages on the login page"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer I want to login without fill the fields so that I could see error messages]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="2103" started-at="2022-05-30T12:21:50 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:21:53 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Logout"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to log in the app so that I could log out]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="23701" started-at="2022-05-30T12:21:53 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:22:16 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Order pop up"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="1196" started-at="2022-05-30T12:22:16 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:22:17 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer I want to see my password after enter it]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="31251" started-at="2022-05-30T12:22:17 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:22:49 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Payment validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="24322" started-at="2022-05-30T12:22:49 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:23:13 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Product information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="runScenario" duration-ms="23095" started-at="2022-05-30T12:23:13 CEST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-30T12:23:36 CEST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Product information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[As a customer, I want to add products to cart, so that I could make payment]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="afterTest" is-config="true" duration-ms="627" started-at="2022-05-30T12:23:36 CEST" finished-at="2022-05-30T12:23:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.ztrain.web.TestRunner@57f23557]" name="tearDownClass" is-config="true" duration-ms="86" started-at="2022-05-30T12:23:37 CEST" finished-at="2022-05-30T12:23:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.ztrain.web.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
